# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Swipe' do
  inherit! :complete
  use_modular_headers!
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
  # $RNFirebaseAsStaticFramework = true
  react_native_path = '../node_modules/react-native'

  config = use_react_native!(
    :path => react_native_path,
    # Другие параметры настройки
  )

  pod 'React', :path => '../node_modules/react-native/'
  pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient/'
  pod 'react-native-safe-area-context', :path => '../node_modules/react-native-safe-area-context/'
  pod 'RNCMaskedView', :path => '../node_modules/@react-native-masked-view/masked-view/'
  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler/'
  pod 'RNScreens', :path => '../node_modules/react-native-screens/'
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons/'
  pod 'react-native-geolocation', :path => '../node_modules/@react-native-community/geolocation/'
  pod 'RNSVG', :path => '../node_modules/react-native-svg/'
  pod 'RNDateTimePicker', :path => '../node_modules/@react-native-community/datetimepicker/'
  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-async-storage/async-storage/'
  pod 'RNCPicker', :path => '../node_modules/@react-native-picker/picker/'
  pod 'ReactNativeART', :path => '../node_modules/@react-native-community/art'
  pod 'RNTextGradientView', :path => "../node_modules/react-native-text-gradient/RNTextGradientView.podspec"
  pod 'react-native-blur', :path => "../node_modules/@react-native-community/blur"
  pod 'react-native-webview', :path => "../node_modules/react-native-webview"
  pod "RNSound", :path => "../node_modules/react-native-sound"
  pod "RNCPushNotificationIOS", :path => '../node_modules/@react-native-community/push-notification-ios'
  pod "RNFBApp", :path => "../node_modules/@react-native-firebase/app"
  pod "RNFBMessaging", :path => "../node_modules/@react-native-firebase/messaging"

  target 'SwipeTests' do
    inherit! :complete
    
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      react_native_path,
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
